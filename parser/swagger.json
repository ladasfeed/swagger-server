{
  "openapi": "3.0.0",
  "info": {
    "title": "LK-BAAS API",
    "version": "1.0.0"
  },
  "paths": {
    "/inn": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить ИНН",
        "operationId": "App\\Controller\\ApiControllerInterface::getInn",
        "parameters": [
          {
            "name": "birthday",
            "in": "query",
            "description": "Дата рождения (1990-09-05)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "Имя",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Фамилия",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "middle_name",
            "in": "query",
            "description": "Отчество",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passport_series",
            "in": "query",
            "description": "Серия паспорта (1234)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passport_number",
            "in": "query",
            "description": "Номер паспорта (123456)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customerInnData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/passport/division_code/{code}": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить подразделение",
        "description": "Получить подразделение",
        "operationId": "App\\Controller\\ApiControllerInterface::getDivision",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код подразделения",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/divisionData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить список регионов СМЗ",
        "description": "Получить список регионов СМЗ",
        "operationId": "App\\Controller\\ApiControllerInterface::getRegions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/regionsData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/activities": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить список видов деятельности",
        "description": "Получить список видов деятельности",
        "operationId": "App\\Controller\\ApiControllerInterface::getActivities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/activitiesData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/{registry_type}/registry": {
      "get": {
        "tags": [
          "Registry"
        ],
        "summary": "Получение всех реестров мерчанта",
        "operationId": "App\\Controller\\MerchantControllerInterface::getRegistries",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "registry_type",
            "in": "path",
            "description": "Тип реестра",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "taxpayer",
                "transaction"
              ]
            }
          },
          {
            "name": "registry_id",
            "in": "query",
            "description": "Фильтр по id реестра",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Фильтр по статусам реестра",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/registryStatuses"
            }
          },
          {
            "name": "order_by_date",
            "in": "query",
            "description": "Сортировка по дате загрзки реестра",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Фильтр по дате загрузки от | Доступен только для реестра выплат",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Фильтр по дате загрузки до | Доступен только для реестра выплат",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "amount_from",
            "in": "query",
            "description": "Фильтр по сумме реестра от | Доступен только для реестра выплат",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "amount_to",
            "in": "query",
            "description": "Фильтр по сумме реестра до | Доступен только для реестра выплат",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Лимит",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Оффсет",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getRegistriesData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Registry"
        ],
        "summary": "Создание реестра",
        "operationId": "App\\Controller\\MerchantControllerInterface::createRegistry",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "registry_type",
            "in": "path",
            "description": "Тип реестра",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "taxpayer",
                "transaction"
              ]
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/byteFileData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseRegistryIdData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/registry/{registry_type}/{registry_id}": {
      "get": {
        "tags": [
          "Registry"
        ],
        "summary": "Получение реестра по id",
        "operationId": "App\\Controller\\MerchantControllerInterface::getRegistry",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "registry_type",
            "in": "path",
            "description": "Тип реестра",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "taxpayer",
                "transaction"
              ]
            }
          },
          {
            "name": "registry_id",
            "in": "path",
            "description": "ID реестра",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getRegistryData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/registry/transaction/code/{code}": {
      "put": {
        "tags": [
          "Registry"
        ],
        "summary": "Подтверждение проведения платежей",
        "operationId": "App\\Controller\\MerchantControllerInterface::payout",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "СМС-код",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/out-transaction/{out_transaction_id}": {
      "get": {
        "tags": [
          "Out Transaction"
        ],
        "summary": "Получение выплаты по id",
        "operationId": "App\\Controller\\MerchantControllerInterface::getOutTransaction",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "out_transaction_id",
            "in": "path",
            "description": "ID выплаты",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOutTransactionData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/out-transaction": {
      "get": {
        "tags": [
          "Out Transaction"
        ],
        "summary": "Получение всех выплат мерчанта",
        "operationId": "App\\Controller\\MerchantControllerInterface::getOutTransactions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Лимит",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Оффсет",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOutTransactionsData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/transaction/registry/pay": {
      "post": {
        "tags": [
          "Registry"
        ],
        "summary": "Запрос на проведение платежей.",
        "operationId": "App\\Controller\\MerchantControllerInterface::createPay",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/self-employed": {
      "get": {
        "tags": [
          "SelfEmployed"
        ],
        "summary": "Получение самозанятого",
        "operationId": "App\\Controller\\MerchantControllerInterface::getSelfEmployedList",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSelfEmployedListData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "SelfEmployed"
        ],
        "summary": "Создание самозанятого",
        "operationId": "App\\Controller\\MerchantControllerInterface::createSelfEmployed",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createSelfEmployedData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSelfEmployedData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Ошибка валидации)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/{user_id}/merchant/{merchant_id}/self-employed/{self_employed_id}": {
      "get": {
        "tags": [
          "SelfEmployed"
        ],
        "summary": "Получение самозанятого",
        "operationId": "App\\Controller\\MerchantControllerInterface::getSelfEmployed",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID юзера",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "description": "ID мерчанта",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "self_employed_id",
            "in": "path",
            "description": "ID самозанятого",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSelfEmployedData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Не найдено)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (Внутренняя ошибка сервера)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "error": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorObject"
            }
          }
        },
        "type": "object"
      },
      "errorObject": {
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorBody"
            }
          }
        },
        "type": "object"
      },
      "errorBody": {
        "properties": {
          "code": {
            "type": "string",
            "example": "string"
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "field": {
            "type": "string",
            "example": "string"
          }
        },
        "type": "object"
      },
      "customerInnData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/registryData"
          }
        },
        "type": "object"
      },
      "customerInn": {
        "properties": {
          "code": {
            "description": "Статус ответа",
            "type": "string",
            "example": "OK"
          },
          "inn": {
            "description": "ИНН",
            "type": "string",
            "example": "0123456789"
          }
        },
        "type": "object"
      },
      "divisionData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/division"
          }
        },
        "type": "object"
      },
      "division": {
        "properties": {
          "value": {
            "description": "Наименование подразделения",
            "type": "string",
            "example": "ОТДЕЛ УФМС РОССИИ ПО ВОРОНЕЖСКОЙ ОБЛ. В ЛЕНИНСКОМ Р-НЕ Г. ВОРОНЕЖА"
          }
        },
        "type": "object"
      },
      "regionsData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/regions"
          }
        },
        "type": "object"
      },
      "regions": {
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/region"
            }
          }
        },
        "type": "object"
      },
      "region": {
        "properties": {
          "oktmo": {
            "description": "ОКТМО региона",
            "type": "string",
            "example": "01000000"
          },
          "name": {
            "description": "Наименование региона",
            "type": "string",
            "example": "Алтайский край"
          }
        },
        "type": "object"
      },
      "activitiesData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/activitiesList"
          }
        },
        "type": "object"
      },
      "activitiesList": {
        "properties": {
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/activity"
            }
          }
        },
        "type": "object"
      },
      "activity": {
        "properties": {
          "code": {
            "description": "ID вида деятельности",
            "type": "string",
            "example": "1"
          },
          "parent_code": {
            "description": "ID родительского вида деятельности",
            "type": "string",
            "example": null
          },
          "description": {
            "description": "Наименование вида деятельности",
            "type": "string",
            "example": "Ремонт"
          }
        },
        "type": "object"
      },
      "responseRegistryIdData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/registryIdData"
          }
        },
        "type": "object"
      },
      "registryIdData": {
        "properties": {
          "id": {
            "description": "id Реестра",
            "type": "integer",
            "example": 1
          }
        },
        "type": "object"
      },
      "byteFileData": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "type": "object"
      },
      "registryStatus": {
        "properties": {
          "registry_status": {
            "type": "string",
            "enum": [
              "in_parsing_processing",
              "parsing_done",
              "new",
              "in_payment_processing",
              "processed",
              "done",
              "error",
              "confirmed_to_pay"
            ]
          }
        },
        "type": "object"
      },
      "orderBy": {
        "properties": {
          "order_by": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object"
      },
      "registryStatuses": {
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/registryStatus"
            }
          }
        },
        "type": "object"
      },
      "merchantData": {
        "properties": {
          "id": {
            "description": "id мерчанта",
            "type": "integer",
            "example": 1
          },
          "status": {
            "description": "Статус мерчанта",
            "type": "string",
            "example": "waiting_common_data"
          },
          "common": {
            "$ref": "#/components/schemas/merchantCommonData"
          },
          "financial": {
            "$ref": "#/components/schemas/merchantFinancialData"
          },
          "administratrion": {
            "$ref": "#/components/schemas/merchantAdministrationData"
          }
        },
        "type": "object"
      },
      "merchantCommonData": {
        "properties": {
          "inn": {
            "description": "ИНН мерчанта",
            "type": "string",
            "example": "123456789012"
          },
          "legal_name": {
            "description": "название мерчанта",
            "type": "string",
            "example": "Платежный модуль"
          },
          "legal_form": {
            "description": "емали мерчанта",
            "type": "string",
            "example": "ООО"
          },
          "email": {
            "description": "e-mail мерчанта",
            "type": "string",
            "example": "email@mail.ru"
          },
          "legal_address": {
            "description": "юр. адрес мерчанта",
            "type": "string",
            "example": "Москва ул.Тверская, 45"
          },
          "legal_fias_id": {
            "description": "ФИАС id юр. адреса мерчанта",
            "type": "string",
            "example": "b756fe6b-bbd3-44d5-9302-5bfcc740f46e"
          },
          "actual_address": {
            "description": "фактический адрес мерчанта",
            "type": "string",
            "example": "Москва ул.Тверская, 45"
          },
          "actual_fias_id": {
            "description": "ФИАС id фактического адреса мерчанта",
            "type": "string",
            "example": "b756fe6b-bbd3-44d5-9302-5bfcc740f46e"
          },
          "egrul_address": {
            "description": "Юр. адрес по версии ЕГРЮЛ мерчанта",
            "type": "string",
            "example": "Москва ул.Тверская, 45"
          },
          "snils": {
            "description": "СНИЛС мерчанта",
            "type": "string",
            "example": "645-370-555 02"
          }
        },
        "type": "object"
      },
      "merchantFinancialData": {
        "properties": {
          "taxation": {
            "description": "Система налогообложения",
            "type": "string",
            "example": "osn"
          },
          "vat_rate": {
            "description": "Налоговая ставка мерчанта",
            "type": "string",
            "example": "18%"
          },
          "bank": {
            "$ref": "#/components/schemas/bank"
          }
        },
        "type": "object"
      },
      "merchantAdministrationData": {
        "properties": {
          "first_name": {
            "description": "Имя руководителя",
            "type": "string",
            "example": "Иван"
          },
          "last_name": {
            "description": "Фамилия руководителя",
            "type": "string",
            "example": "Иванов"
          },
          "patronymic": {
            "description": "Отчество руководителя",
            "type": "string",
            "example": "Иванович"
          },
          "passport": {
            "$ref": "#/components/schemas/passport"
          },
          "document": {
            "$ref": "#/components/schemas/document"
          },
          "position": {
            "description": "Должность",
            "type": "string",
            "example": "Генеральный директор"
          },
          "inn": {
            "description": "ИНН руководителя",
            "type": "string",
            "example": "123456789012"
          },
          "registration_address": {
            "description": "адрес регистрации",
            "type": "string",
            "example": "Москва ул.Тверская, 45"
          },
          "registration_address_fias_id": {
            "description": "ФИАС id адреса регистрации",
            "type": "string",
            "example": "b756fe6b-bbd3-44d5-9302-5bfcc740f46e"
          }
        },
        "type": "object"
      },
      "bank": {
        "properties": {
          "bik": {
            "description": "БИК мерчанта",
            "type": "string",
            "example": "123456789"
          },
          "rs": {
            "description": "р/с мерчанта",
            "type": "string",
            "example": "12345678901234567890"
          },
          "name": {
            "description": "Название банка мерчанта",
            "type": "string",
            "example": "ПАО Банк"
          },
          "ks": {
            "description": "Кор. счёт мерчанта",
            "type": "string",
            "example": "12345678901234567890"
          }
        },
        "type": "object"
      },
      "document": {
        "properties": {
          "type": {
            "description": "Тип документа",
            "type": "string",
            "example": "articles_of_association"
          },
          "series_and_number": {
            "description": "Серия и номер документа",
            "type": "string",
            "example": "134879"
          },
          "issue_date": {
            "description": "Дата выдачи документа",
            "type": "string",
            "example": "13.04.1979"
          },
          "issue_institution": {
            "description": "Кем выдан документ",
            "type": "string",
            "example": "ООО Ваши документы"
          }
        },
        "type": "object"
      },
      "getRegistryData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/registryData"
          }
        },
        "type": "object"
      },
      "registryData": {
        "properties": {
          "id": {
            "description": "id реестра",
            "type": "integer",
            "example": 1
          },
          "status": {
            "description": "Статус реестра",
            "type": "string",
            "example": "new"
          },
          "entry_count": {
            "description": "Количество обработанных строк в реестре",
            "type": "integer",
            "example": 1
          },
          "general_count": {
            "description": "Общее количество строк в реестре",
            "type": "integer",
            "example": 1
          },
          "registry_name": {
            "description": "Название реестра",
            "type": "string",
            "example": "Название"
          },
          "date": {
            "description": "Дата создания реестра",
            "type": "string",
            "example": "2005-08-15T15:52:01+00:00"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/registryLine"
            }
          }
        },
        "type": "object"
      },
      "registryLine": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/transactionLine"
          },
          {
            "$ref": "#/components/schemas/taxpayerLine"
          }
        ]
      },
      "transactionLine": {
        "properties": {
          "id": {
            "description": "id строки",
            "type": "integer",
            "example": 1
          },
          "status": {
            "description": "Статус строки",
            "type": "string",
            "enum": [
              "processed_line",
              "error_line"
            ],
            "example": "processed_line"
          },
          "line_number": {
            "description": "Номер строки",
            "type": "integer",
            "example": 4
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/registryLineError"
            }
          },
          "transaction": {
            "$ref": "#/components/schemas/outTransactionData"
          }
        },
        "type": "object"
      },
      "taxpayerLine": {
        "properties": {
          "id": {
            "description": "id строки",
            "type": "integer",
            "example": 1
          },
          "status": {
            "description": "Статус строки",
            "type": "string",
            "enum": [
              "processed_line",
              "error_line"
            ],
            "example": "processed_line"
          },
          "line_number": {
            "description": "Номер строки",
            "type": "integer",
            "example": 4
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/registryLineError"
            }
          },
          "client": {
            "$ref": "#/components/schemas/merchantSelfEmployed"
          }
        },
        "type": "object"
      },
      "merchantSelfEmployed": {
        "properties": {
          "id": {
            "description": "id связи партнер-смз",
            "type": "integer",
            "example": 1
          },
          "client_id": {
            "description": "ID клиента в ТБ",
            "type": "string",
            "example": "1"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchantData"
          },
          "self_employed": {
            "$ref": "#/components/schemas/selfEmployedData"
          }
        },
        "type": "object"
      },
      "registryLineError": {
        "description": "Ошибка",
        "type": "string",
        "example": "Текст ошибки"
      },
      "getOutTransactionData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/outTransactionData"
          }
        },
        "type": "object"
      },
      "getOutTransactionsData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getOutTransactions"
          }
        },
        "type": "object"
      },
      "getOutTransactions": {
        "properties": {
          "items_count": {
            "description": "Общее количество элементов",
            "type": "integer",
            "example": 50
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/outTransactionData"
            }
          }
        },
        "type": "object"
      },
      "maskedCardData": {
        "properties": {
          "pan": {
            "description": "Маскированный номер карты",
            "type": "string",
            "example": "123456XXXXXXX1234"
          },
          "ps": {
            "description": "Идентификатор платежной системы",
            "type": "string",
            "example": "VISA"
          }
        },
        "type": "object"
      },
      "payRequest": {
        "properties": {
          "out_transactions": {
            "$ref": "#/components/schemas/payData"
          }
        },
        "type": "object"
      },
      "payData": {
        "properties": {
          "id": {
            "description": "id выплаты",
            "type": "integer",
            "example": 1
          },
          "checked": {
            "description": "Решение по выплате",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "outTransactionData": {
        "properties": {
          "id": {
            "description": "id выплаты",
            "type": "integer",
            "example": 1
          },
          "payment_date": {
            "description": "Дата проведения платежа",
            "type": "string",
            "example": "2005-08-15T15:52:01+00:00"
          },
          "self_employed": {
            "$ref": "#/components/schemas/selfEmployedDataForResponse"
          },
          "amount": {
            "description": "Сумма выплаты",
            "type": "number",
            "example": 75.76
          },
          "status": {
            "description": "Статус выплаты",
            "type": "string",
            "example": "new"
          },
          "masked_card": {
            "$ref": "#/components/schemas/maskedCardData"
          }
        },
        "type": "object"
      },
      "selfEmployedDataForResponse": {
        "properties": {
          "confirmed_by_tax_service": {
            "description": "ИНН самозанятого",
            "type": "boolean",
            "example": true
          },
          "inn": {
            "description": "ИНН самозанятого",
            "type": "string",
            "example": "123456789012"
          },
          "last_name": {
            "description": "Фамилия самозанятого",
            "type": "string",
            "example": "Иванов"
          },
          "first_name": {
            "description": "Имя самозанятого",
            "type": "string",
            "example": "Иван"
          },
          "middle_name": {
            "description": "Отчество самозанятого",
            "type": "string",
            "example": "Иванович"
          },
          "client_type": {
            "description": "Тип клиента",
            "type": "string",
            "enum": [
              "selfemployed",
              "not_selfemployed"
            ],
            "example": "selfemployed"
          }
        },
        "type": "object"
      },
      "getRegistriesData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getRegistries"
          }
        },
        "type": "object"
      },
      "getRegistries": {
        "properties": {
          "items_count": {
            "description": "Общее количество элементов",
            "type": "integer",
            "example": 50
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/registryData"
            }
          }
        },
        "type": "object"
      },
      "getSelfEmployedListData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/selfEmployedList"
          }
        },
        "type": "object"
      },
      "selfEmployedList": {
        "properties": {
          "items_count": {
            "description": "Общее количество элементов",
            "type": "integer",
            "example": 50
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/selfEmployedData"
            }
          }
        },
        "type": "object"
      },
      "getSelfEmployedData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/selfEmployedData"
          }
        },
        "type": "object"
      },
      "selfEmployedData": {
        "properties": {
          "id": {
            "description": "ID",
            "type": "integer",
            "example": "123"
          },
          "first_name": {
            "description": "Имя",
            "type": "string",
            "example": "Иван"
          },
          "last_name": {
            "description": "Фамилия",
            "type": "string",
            "example": "Иванов"
          },
          "middle_name": {
            "description": "Отчество",
            "type": "string",
            "example": "Иванович"
          },
          "phone": {
            "description": "Номер телефона",
            "type": "string",
            "example": "79515483499"
          },
          "email": {
            "description": "e-mail",
            "type": "string",
            "example": "email@mail.ru"
          },
          "client_type": {
            "description": "Тип клиента",
            "type": "string",
            "enum": [
              "selfemployed",
              "not_selfemployed"
            ],
            "example": "selfemployed"
          },
          "birthday": {
            "description": "Дата рождения",
            "type": "string",
            "example": "2005-08-15"
          },
          "citizenship": {
            "description": "Гражданство",
            "type": "string",
            "example": "RUS"
          },
          "passport": {
            "$ref": "#/components/schemas/passport"
          },
          "inn": {
            "description": "ИНН",
            "type": "string",
            "example": "123456789012"
          },
          "self_employment": {
            "$ref": "#/components/schemas/self_employment"
          }
        },
        "type": "object"
      },
      "createSelfEmployedData": {
        "properties": {
          "first_name": {
            "description": "Имя",
            "type": "string",
            "example": "Иван"
          },
          "last_name": {
            "description": "Фамилия",
            "type": "string",
            "example": "Иванов"
          },
          "middle_name": {
            "description": "Отчество",
            "type": "string",
            "example": "Иванович"
          },
          "phone": {
            "description": "Номер телефона",
            "type": "string",
            "example": "79515483499"
          },
          "email": {
            "description": "e-mail",
            "type": "string",
            "example": "email@mail.ru"
          },
          "client_type": {
            "description": "Тип клиента",
            "type": "string",
            "enum": [
              "selfemployed",
              "not_selfemployed"
            ],
            "example": "selfemployed"
          },
          "birthday": {
            "description": "Дата рождения",
            "type": "string",
            "example": "2005-08-15"
          },
          "citizenship": {
            "description": "Гражданство",
            "type": "string",
            "example": "RU"
          },
          "passport": {
            "$ref": "#/components/schemas/passport"
          },
          "inn": {
            "description": "ИНН",
            "type": "string",
            "example": "123456789012"
          },
          "self_employment": {
            "$ref": "#/components/schemas/self_employment"
          }
        },
        "type": "object"
      },
      "self_employment": {
        "properties": {
          "address": {
            "description": "Регион",
            "type": "string",
            "example": "10"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/activities"
            }
          }
        },
        "type": "object"
      },
      "activities": {
        "description": "ID вида деятельности",
        "type": "string",
        "example": "10"
      },
      "passport": {
        "properties": {
          "series": {
            "description": "Серия паспорта",
            "type": "string",
            "example": "1234"
          },
          "number": {
            "description": "Номер паспорта",
            "type": "string",
            "example": "123456"
          },
          "division_code": {
            "description": "Код подразделения",
            "type": "string",
            "example": "139789"
          },
          "issuer": {
            "description": "Кем выдан паспорт",
            "type": "string",
            "example": "ОВД Центрального р-на"
          },
          "issue_date": {
            "description": "Дата выдачи паспорта",
            "type": "string",
            "example": "13.04.1989"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}